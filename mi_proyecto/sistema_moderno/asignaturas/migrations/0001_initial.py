# Generated by Django 5.2.1 on 2025-06-10 05:15

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('autenticacion', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel', models.CharField(choices=[('1', 'Primero'), ('2', 'Segundo'), ('3', 'Tercero'), ('4', 'Cuarto'), ('5', 'Quinto'), ('6', 'Sexto'), ('7', 'Séptimo'), ('8', 'Octavo'), ('9', 'Noveno'), ('10', 'Décimo'), ('11', 'Once')], help_text='Grado escolar del curso', max_length=2)),
                ('paralelo', models.CharField(help_text='Número del grupo (01, 02, etc.)', max_length=2)),
                ('cupo_maximo', models.PositiveSmallIntegerField(help_text='Cupo máximo de estudiantes', validators=[django.core.validators.MinValueValidator(1)])),
                ('estado', models.BooleanField(default=True, help_text='Estado del curso (activo/inactivo)')),
            ],
            options={
                'verbose_name': 'Curso',
                'verbose_name_plural': 'Cursos',
                'ordering': ['nivel', 'paralelo'],
                'unique_together': {('nivel', 'paralelo')},
            },
        ),
        migrations.CreateModel(
            name='PeriodoAcademico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('numero', models.PositiveSmallIntegerField()),
                ('año_lectivo', models.PositiveIntegerField()),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Período Académico',
                'verbose_name_plural': 'Períodos Académicos',
                'ordering': ['-año_lectivo', 'numero'],
                'unique_together': {('numero', 'año_lectivo')},
            },
        ),
        migrations.CreateModel(
            name='Asignatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='Código único de la asignatura', max_length=30, unique=True)),
                ('nombre', models.CharField(help_text='Nombre de la asignatura', max_length=100)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción detallada de la asignatura')),
                ('area_estudio', models.CharField(help_text='Área de estudio de la asignatura', max_length=100)),
                ('nivel_educativo', models.CharField(choices=[('PRIMARIA', 'Primaria'), ('BACHILLERATO', 'Bachillerato'), ('TODOS', 'Todos los niveles')], default='TODOS', help_text='Nivel educativo en el que se imparte la asignatura', max_length=20)),
                ('niveles_especificos', models.JSONField(default=list, help_text="Lista de niveles específicos donde se imparte la asignatura (ej: ['6', '7', '8'] para grados 6-8)")),
                ('horas_semanales', models.PositiveSmallIntegerField(default=1, help_text='Número de horas semanales de la asignatura', validators=[django.core.validators.MinValueValidator(1)])),
            ],
            options={
                'verbose_name': 'Asignatura',
                'verbose_name_plural': 'Asignaturas',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Horario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia', models.CharField(choices=[('LUN', 'Lunes'), ('MAR', 'Martes'), ('MIE', 'Miércoles'), ('JUE', 'Jueves'), ('VIE', 'Viernes')], help_text='Día de la semana', max_length=3)),
                ('hora_inicio', models.TimeField(help_text='Hora de inicio de la clase')),
                ('hora_fin', models.TimeField(help_text='Hora de finalización de la clase')),
                ('asignatura', models.ForeignKey(blank=True, help_text='Asignatura para este horario', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='horarios', to='asignaturas.asignatura')),
                ('curso', models.ForeignKey(help_text='Curso para este horario', on_delete=django.db.models.deletion.CASCADE, related_name='horarios', to='asignaturas.curso')),
            ],
            options={
                'verbose_name': 'Horario',
                'verbose_name_plural': 'Horarios',
                'ordering': ['dia', 'hora_inicio'],
                'unique_together': {('asignatura', 'curso', 'dia', 'hora_inicio')},
            },
        ),
        migrations.CreateModel(
            name='MatriculaCurso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_matricula', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora de la matricula')),
                ('estado', models.CharField(choices=[('ACTIVO', 'Activo'), ('RETIRADO', 'Retirado'), ('SUSPENDIDO', 'Suspendido')], default='ACTIVO', help_text='Estado de la matrícula del estudiante', max_length=30)),
                ('curso', models.ForeignKey(help_text='Curso en el que está matriculado el estudiante', on_delete=django.db.models.deletion.CASCADE, related_name='matriculas', to='asignaturas.curso')),
                ('estudiante', models.ForeignKey(help_text='Estudiante matriculado en el curso', on_delete=django.db.models.deletion.CASCADE, related_name='matriculas', to='autenticacion.usuario')),
            ],
            options={
                'verbose_name': 'Matrícula en Curso',
                'verbose_name_plural': 'Matrículas en Cursos',
                'ordering': ['-fecha_matricula'],
                'unique_together': {('estudiante', 'curso')},
            },
        ),
    ]
